## change the paths of tools and resouces if needed
## these variables will be checked beforehand

### CHANGE HERE IF YOU MUST
## be careful to keep variable values into quotes - paths can be given as absolute (preferred) or relative
#

# some tools/resources paths to set up
export samtools="/usr/local/bin/samtools"
export samtools0116="./tools/samtools-0.1.16/samtools-0.1.16"
export picard="/usr/local/bin/picard.jar"
export varscan="./tools/VarScan.v2.4.3.jar"
export novocraft="./tools/novocraft/"
export fastaParser="./tools/fasta-parser-0.0.17-OHCC.jar"
export hlaDir="./HLAdb/" # must contain hla.dat, hla_gen.fasta, hla_nuc.fasta files, and alignments/ dir, all from the same HLA version

# do not change the next 4 variables if you are not comfortable with VarScan options for variant reporting and filtering
export TARGETEDparamsA="--min-coverage 30 --min-reads2 10 --min-strands2 2 --min-avg-qual 30 --min-var-freq 0.02 --p-value 1e-03" # parameters for VarScan to analyse targeted exome pileups
export TARGETEDparamsF="--min-coverage 30 --min-reads2 10 --min-strands2 2 --min-avg-qual 30 --min-var-freq 0.02 --p-value 1e-03" #  parameters for Varscan to filter targeted exome variants
export WGSparamsA="--min-coverage 10 --min-reads2 3 --min-strands2 2 --min-avg-qual 30 --min-var-freq 0.02" # parameters for Varscan to analyse WGS (Whole Genome Sequencing) pileups
export WGSparamsF="--min-coverage 10 --min-reads2 3 --min-strands2 1 --min-avg-qual 30 --min-var-freq 0.02" # parameters for Varscan to filter WGS variants
#
##
### CHANGES END HERE

# unify all paths into full paths
samtools=$(readlink -f "$samtools")
samtools0116=$(readlink -f "$samtools0116")
picard=$(readlink -f "$picard")
varscan=$(readlink -f "$varscan")
novocraft=$(readlink -f "$novocraft")
fastaParser=$(readlink -f "$fastaParser")
hlaDir=$(readlink -f "$hlaDir")

# test all paths and variables
if [[ ! -x "$samtools" ]]; then echo "problem with $samtools path" ; return 2 ; fi
if [[ ! -x "$samtools0116" ]]; then echo "problem with $samtools0116 path" ; return 2 ; fi
if [[ ! -r "$picard" ]]; then echo "problem with $picard path" ; return 2 ; fi
if [[ ! -r "$varscan" ]]; then echo "problem with $varscan path" ; return 2 ; fi
if [[ ! -d "$novocraft" ]]; then echo "problem with $novocraft path" ; return 2 ; fi
if [[ ! -r "$fastaParser" ]]; then echo "problem with $fastaParser path" ; return 2 ; fi
if [[ ! -d "$hlaDir" ]]; then echo "problem with $hlaDir path" ; return 2 ; fi

